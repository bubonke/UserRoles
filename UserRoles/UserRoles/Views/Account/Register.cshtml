@model UserRoles.Models.RegisterViewModel
@{
    /**/

    /**/

    ViewBag.Title = "Register";

}

@*<div class="col-md-offset-1 col-md-10 col-sm-6">
        <h4>@ViewBag.Title.</h4>
    </div>*@

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="col-md-offset-1 col-md-10 col-sm-10">
        <h4>Create a new account.</h4>
    </div>
    <hr />
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-3">
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-3">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Phone, new { @class = "col-md-2 control-label" })
        <div class="col-md-3">
            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-3">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-3">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-3">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(m => m.Users, new { @class = "col-md-2 control-label" })
            <div class="col-md-3">
                @Html.RadioButtonFor(m => m.Users, "Student")&nbsp;Student<br /><br />
                @Html.RadioButtonFor(m => m.Users, "Land_Lord")&nbsp;Landlord<br /><br />
                @Html.RadioButtonFor(m => m.Users, "Agent")&nbsp;Agent<br /><br />
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Gender, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @*@Html.Label(model => model.UserType, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-10">
            @Html.DropDownList("UserType",new List<SelectListItem>
       {
           new SelectListItem{Text="Student", Value="1",Selected=true},
           new SelectListItem{Text="Land Lord", Value="2"}
       },"Select User Typer")
            @*@Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })*@
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
